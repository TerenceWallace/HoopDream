<?xml version="1.0"?>
<doc>
<assembly>
<name>
Arkitech.Platform
</name>
</assembly>
<members>
<member name="T:My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:My.Resources.Resources.ArgumentException">
<summary>
  Looks up a localized string similar to Parameter {0} cannot be null..
</summary>
</member>
<member name="P:My.Resources.Resources.EntityUnSavedException">
<summary>
  Looks up a localized string similar to Unable to save {0} to the database.  Value of the PrimaryKey is not valid for this object. &apos;Value&apos; should be greater than &apos;0&apos;..
</summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.AutoSync">
 <summary>
 Gets or sets the AutoSync enumeration. 
 </summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.CanBeNull">
 <summary>
 Gets or sets whether a column can contain null values. 
 </summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.DbType">
 <summary>
 Gets or sets the type of the database column. 
 </summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.Collation">
 <summary>
 Gets or sets whether a column is sorted in the column
 </summary>
 <remarks>ASC -vs- DESC</remarks>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.IsDbGenerated">
 <summary>
 Gets or sets whether a column contains values that the database auto-generates. 
 </summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.IsIndexed">
 <summary>
  Gets or sets whether a column is a Foriegn Key in some other table.
 </summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.IsPrimaryKey">
 <summary>
 Gets or sets whether this class member represents a column that is part or all of the primary key of the table. 
 </summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.IsVersion">
 <summary>
 Gets or sets whether the column type of the member is a database timestamp or version number. 
 </summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.Name">
 <summary>
 Gets or sets the name of a column. (Inherited from DataAttribute.) 
 </summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.MaxLength">
 <summary>
 MaxLength is used for the Entity Framework to decide how large to make a string value field when it creates the database.
 </summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.Storage">
 <summary>
 Gets or sets a private storage field to hold the value from a column. (Inherited from DataAttribute.) 
 </summary>
</member>
<member name="P:Arkitech.Platform.ColumnAttribute.DefaultValue">
 <summary>
 When implemented it allows for a default value to be stored in object and database
 </summary>
</member>
<member name="E:Arkitech.Platform.Common.Change.PropertyChanged">
 <summary>
 Occurs when a property value changes.
 </summary>
</member>
<member name="E:Arkitech.Platform.Common.Change.PropertyChanging">
 <summary>
 Occurs when a property value changes.
 </summary>
</member>
<member name="M:Arkitech.Platform.Common.Change.OnPropertyChanged(System.String)">
 <summary>
 Raises the <see cref="E:Arkitech.Platform.Common.Change.PropertyChanged"/> event.
 </summary>
 <param name="propertyName">The name of the property which is changed.</param>
</member>
<member name="M:Arkitech.Platform.Common.Change.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
 <summary>
 Raises the <see cref="E:Arkitech.Platform.Common.Change.PropertyChanged"/> event.
 </summary>
 <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
</member>
<member name="M:Arkitech.Platform.Common.Change.RaisePropertyChanged(System.Reflection.MemberInfo)">
 <summary>
 Raises the <see cref="M:Arkitech.Platform.Common.Change.RaisePropertyChanged(System.Reflection.MemberInfo)"/> event.
 </summary>
 <param name="propertyInfo">The property info of the property that has changed.</param>
</member>
<member name="T:Arkitech.Platform.Common.QueryBuilder">
 <summary>
 Generates an SQL query using the provided data.
 </summary>
</member>
<member name="P:Arkitech.Platform.Common.QueryBuilder.TableName">
 <summary>
 Gets the table that the resulting query will work with.
 </summary>
</member>
<member name="P:Arkitech.Platform.Common.QueryBuilder.FieldNames">
 <summary>
 Gets the table fields that the resulting query will work with.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Arkitech.Platform.Common.QueryBuilder.IdentityCheck">
 <summary>
 Gets or sets whether the query is set to return a new identity value.
 </summary>
</member>
<member name="M:Arkitech.Platform.Common.QueryBuilder.#ctor(System.String)">
 <summary>
 Creates an instance of this class.
 </summary>
</member>
<member name="M:Arkitech.Platform.Common.QueryBuilder.Flush">
 <summary>
 Clears all of the internal dictionaries so that a new query can be created.
 </summary>
</member>
<member name="M:Arkitech.Platform.Common.QueryBuilder.Databind(System.Collections.Generic.IEnumerable{Arkitech.Platform.Core.Column},System.Object)">
 <summary>
 Binds data to the query.
 </summary>
 <param name="InputColumns">Column values containing the column in which the data will appear.</param>
 <param name="InputValue">String value containing the data that is to be used.</param>
</member>
<member name="M:Arkitech.Platform.Common.QueryBuilder.SetCriteria(System.String,System.String,System.String)">
 <summary>
 Sets the WHERE portion of the query (if applicable) using the specified operator (default is "=".)
 </summary>
 <param name="CriteriaField">String containing the column to be used.</param>
 <param name="CriteriaOperator">String containing the logic operator to be used in place of the default.</param>
 <param name="CriteriaValue">String containing the value to be used.</param>
</member>
<member name="M:Arkitech.Platform.Common.QueryBuilder.Insert">
 <summary>
 Returns an Input query using the data provided.
 </summary>
</member>
<member name="M:Arkitech.Platform.Common.QueryBuilder.UpdateText">
 <summary>
 Returns an Update query using the data provided.
 </summary>
</member>
<member name="M:Arkitech.Platform.Common.QueryBuilder.Delete">
 <summary>
 Returns a Delete query using the data provided.
 </summary>
</member>
<member name="M:Arkitech.Platform.Common.QueryBuilder.GetAll">
 <summary>
 Returns a Get all query using the data provided.
 </summary>
</member>
<member name="M:Arkitech.Platform.Common.QueryBuilder.GetByCriteria">
 <summary>
 Returns a Get query using the data provided.
 </summary>
</member>
<member name="M:Arkitech.Platform.Common.QueryBuilder.GetByCriteria(System.String,System.String)">
 <summary>
 Returns a quick Get query string using the input provided.
 </summary>
</member>
<member name="T:Arkitech.Platform.ObservableObject">
 <summary>
 A base class for objects of which the properties must be observable.
 </summary>
</member>
<member name="E:Arkitech.Platform.ObservableObject.PropertyChanged">
 <summary>
 Occurs after a property value changes.
 </summary>
</member>
<member name="P:Arkitech.Platform.ObservableObject.PropertyChangedHandler">
 <summary>
 Provides access to the PropertyChanged event handler to derived classes.
 </summary>
</member>
<member name="E:Arkitech.Platform.ObservableObject.PropertyChanging">
 <summary>
 Occurs before a property value changes.
 </summary>
</member>
<member name="P:Arkitech.Platform.ObservableObject.PropertyChangingHandler">
 <summary>
 Provides access to the PropertyChanging event handler to derived classes.
 </summary>
</member>
<member name="M:Arkitech.Platform.ObservableObject.VerifyPropertyName(System.String)">
 <summary>
 Verifies that a property name exists in this ViewModel. This method
 can be called before the property is used, for instance before
 calling RaisePropertyChanged. It avoids errors when a property name
 is changed but some places are missed.
 </summary>
 <remarks>This method is only active in DEBUG mode.</remarks>
 <param name="propertyName">The name of the property that will be
 checked.</param>
</member>
<member name="M:Arkitech.Platform.ObservableObject.RaisePropertyChanging(System.String)">
 <summary>
 Raises the PropertyChanging event if needed.
 </summary>
 <remarks>If the propertyName parameter
 does not correspond to an existing property on the current class, an
 exception is thrown in DEBUG configuration only.</remarks>
 <param name="propertyName">The name of the property that
 changed.</param>
</member>
<member name="M:Arkitech.Platform.ObservableObject.RaisePropertyChanged(System.String)">
 <summary>
 Raises the PropertyChanged event if needed.
 </summary>
 <remarks>If the propertyName parameter
 does not correspond to an existing property on the current class, an
 exception is thrown in DEBUG configuration only.</remarks>
 <param name="propertyName">The name of the property that
 changed.</param>
</member>
<member name="M:Arkitech.Platform.ObservableObject.RaisePropertyChanging``1(System.Linq.Expressions.Expression{System.Func{``0}})">
 <summary>
 Raises the PropertyChanging event if needed.
 </summary>
 <typeparam name="T">The type of the property that
 changes.</typeparam>
 <param name="propertyExpression">An expression identifying the property
 that changes.</param>
</member>
<member name="M:Arkitech.Platform.ObservableObject.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
 <summary>
 Raises the PropertyChanged event if needed.
 </summary>
 <typeparam name="T">The type of the property that
 changed.</typeparam>
 <param name="propertyExpression">An expression identifying the property
 that changed.</param>
</member>
<member name="M:Arkitech.Platform.ObservableObject.GetPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
 <summary>
 Extracts the name of a property from an expression.
 </summary>
 <typeparam name="T">The type of the property.</typeparam>
 <param name="propertyExpression">An expression returning the property's name.</param>
 <returns>The name of the property returned by the expression.</returns>
 <exception cref="T:System.ArgumentNullException">If the expression is null.</exception>
 <exception cref="T:System.ArgumentException">If the expression does not represent a property.</exception>
</member>
<member name="M:Arkitech.Platform.ObservableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0@,``0)">
 <summary>
 Assigns a new value to the property. Then, raises the
 PropertyChanged event if needed. 
 </summary>
 <typeparam name="T">The type of the property that
 changed.</typeparam>
 <param name="propertyExpression">An expression identifying the property
 that changed.</param>
 <param name="field">The field storing the property's value.</param>
 <param name="newValue">The property's value after the change
 occurred.</param>
 <returns>True if the PropertyChanged event has been raised,
 false otherwise. The event is not raised if the old
 value is equal to the new value.</returns>
</member>
<member name="M:Arkitech.Platform.ObservableObject.Set``1(System.String,``0@,``0)">
 <summary>
 Assigns a new value to the property. Then, raises the
 PropertyChanged event if needed. 
 </summary>
 <typeparam name="T">The type of the property that
 changed.</typeparam>
 <param name="propertyName">The name of the property that
 changed.</param>
 <param name="field">The field storing the property's value.</param>
 <param name="newValue">The property's value after the change
 occurred.</param>
 <returns>True if the PropertyChanged event has been raised,
 false otherwise. The event is not raised if the old
 value is equal to the new value.</returns>
</member>
<member name="M:Arkitech.Platform.Core.CompactCommand.Databind(System.String)">
 <summary>
 When the database is created, we need to initialize it with new tables, relations and possibly data 
 </summary>
</member>
<member name="M:Arkitech.Platform.Core.CreateIndexCommand.Databind(Arkitech.Platform.Core.Column)">
 <summary>
 Builds a SQL CREATE or ALTER TABLE command for this index depending on its type.
 </summary>
</member>
<member name="M:Arkitech.Platform.Core.CreateTableCommand.Databind">
 <summary>
 Builds a SQL CREATE TABLE command for the specified 
 table name using the same structure as the existing table.
 </summary>
 <remarks>
 The CreateCommand property uses this method.
 </remarks>
</member>
<member name="M:Arkitech.Platform.Core.DropCommand.Databind(Arkitech.Platform.Core.TableMapping)">
 <summary>
 Gets the SQL DROP INDEX command.
 </summary>
</member>
<member name="M:Arkitech.Platform.Core.InsertCommand.Databind(System.Data.DataTable,Arkitech.Platform.Core.TableMapping)">
 <summary>
 Gets the SQL DROP INDEX command.
 </summary>
</member>
<member name="T:Arkitech.Platform.Core.ObjectExceptionEvent">
 <summary>
 Custom exception for handling a builder exception event
 </summary>
</member>
<member name="M:Arkitech.Platform.Core.ObjectMapping.GetSqlDbType(System.Type,System.Int32)">
 <summary>
 Old method that attempted to guess at type proper type
 </summary>
</member>
<member name="M:Arkitech.Platform.Core.TableQuery`1.CompileNullBinaryExpression(System.Linq.Expressions.BinaryExpression,Arkitech.Platform.Core.CompileResult)">
 <summary>
 Compiles a BinaryExpression where one of the parameters is null.
 </summary>
 <param name="parameter">The non-null parameter</param>
</member>
<member name="M:Arkitech.Platform.StringExtensions.ContainsAll(System.String,System.String[])">
 <summary>
 <para>Returns a value indicating whether all of the specified System.String objects</para>
 <para>occur within this string.</para>
 </summary>
 <param name="s">The string</param>
 <param name="values">The strings to seek</param>
 <returns>true if all values are contained in this string; otherwise, false.</returns>
</member>
<member name="M:Arkitech.Platform.StringExtensions.ContainsAny(System.String,System.String[])">
 <summary>
 <para>Returns a value indicating whether any of the specified System.String objects</para>
 <para>occur within this string.</para>
 </summary>
 <param name="s">The string</param>
 <param name="values">The strings to seek</param>
 <returns>true if any value is contained in this string; otherwise, false.</returns>
</member>
<member name="M:Arkitech.Platform.StringExtensions.Left(System.String,System.Int32)">
 <summary>
 Gets specified number of characters from left of string
 </summary>
 <param name="s"></param>
 <param name="count"></param>
 <returns></returns>
</member>
<member name="M:Arkitech.Platform.StringExtensions.RemoveSurroundingWhitespace(System.String,System.String)">
 <summary>
 <para>Removes all spaces and tabs surrounding the specified substring contained</para>
 <para>within this System.String</para>
 </summary>
 <param name="s">The System.String to check</param>
 <param name="subString">The substring to remove whitespace from</param>
 <returns>System.String without whitespace around specified substring</returns>
</member>
<member name="M:Arkitech.Platform.StringExtensions.Repeat(System.String,System.Byte)">
 <summary>
 <para>Takes a System.String and returns a new System.String of the original</para>
 <para>repeated [n] number of times</para>
 </summary>
 <param name="s">The String</param>
 <param name="count">The number of times to repeat the String</param>
 <returns>A new System.String of the original repeated [n] number of times</returns>
</member>
<member name="M:Arkitech.Platform.StringExtensions.Right(System.String,System.Int32)">
 <summary>
 Gets specified number of characters from right of string
 </summary>
 <param name="s"></param>
 <param name="count"></param>
 <returns></returns>
</member>
<member name="M:Arkitech.Platform.StringExtensions.StartsWithAny(System.String,System.String[])">
 <summary>
 <para>Determines whether the beginning of this string instance matches</para>
 <para>one of the specified strings.</para>
 </summary>
 <param name="s">The string</param>
 <param name="values">The strings to compare</param>
 <returns>true if any value matches the beginning of this string; otherwise, false.</returns>
</member>
<member name="M:Arkitech.Platform.StringExtensions.XmlDeserialize``1(System.String)">
 <summary>
 Deserializes the XML data contained by the specified System.String
 </summary>
 <typeparam name="T">The type of System.Object to be deserialized</typeparam>
 <param name="s">The System.String containing XML data</param>
 <returns>The System.Object being deserialized.</returns>
</member>
<member name="M:Arkitech.Platform.StringExtensions.PadRight(System.String,System.Int64,System.String)">
 <summary>
 Pad the right side of the string with enough PadCharacter characters
 until the string is Size characters long.
 </summary>
 <param name="Value"></param>
 <param name="Size"></param>
 <param name="PadCharacter"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Arkitech.Platform.StringExtensions.IsLetters(System.String)">
 <summary>
 Are all of the characters in Text letters (i.e., A - Z and a - z)?
 </summary>
 <param name="Text"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Arkitech.Platform.StringExtensions.IsDigits(System.String)">
 <summary>
 Are all of the characters in Text digits (i.e., 0 - 9)?
 </summary>
 <param name="Text"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Arkitech.Platform.StringExtensions.IsLettersAndDigits(System.String)">
 <summary>
 Are all of the characters in Text letters or digits?
 </summary>
 <param name="Text"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.#ctor(System.String)">
 <summary>
 Constructs a new CompactConnection and opens a Compact database specified by databasePath.
 </summary>
 <param name="databasePath">
 Specifies the path to the database file.
 </param>
</member>
<member name="P:Arkitech.Platform.FrameworkConnection.TableMappings">
 <summary>
 Returns the mappings from types to tables that the connection
 currently understands.
 </summary>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.GetMapping(System.Type)">
 <summary>
 Retrieves the mapping that is automatically generated for the given type.
 </summary>
 <param name="type">
 The type whose mapping to the database is returned.
 </param>
 <returns>
 The mapping represents the schema of the columns of the database and contains 
 methods to set and get properties of objects.
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.CreateTable``1">
 <summary>
 Executes a "create table if not exists" on the database. It also
 creates any specified indexes on the columns of the table. It uses
 a schema automatically generated from the specified type. You can
 later access this schema by calling GetMapping.
 </summary>
 <returns>
 The number of entries added to the database schema.
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.CreateCommand(System.String,System.Object[])">
 <summary>
 Creates a new Command given the command text with arguments. Place a '?'
 in the command text for each of the arguments.
 </summary>
 <param name="cmdText">
 The fully escaped SQL.
 </param>
 <param name="args">
 Arguments to substitute for the occurences of '?' in the command text.
 </param>
 <returns>
 A <see cref="T:Arkitech.Platform.Core.Command"/>
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Execute(System.String,System.Object[])">
 <summary>
 Creates a Command given the command text (SQL) with arguments. Place a '?'
 in the command text for each of the arguments and then executes that command.
 Use this method instead of Query when you don't expect rows back. Such cases include
 INSERTs, UPDATEs, and DELETEs.
 You can set the Trace or TimeExecution properties of the connection
 to profile execution.
 </summary>
 <param name="_query">
 The fully escaped SQL.
 </param>
 <param name="args">
 Arguments to substitute for the occurences of '?' in the query.
 </param>
 <returns>
 The number of rows modified in the database as a result of this execution.
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Query``1(System.String,System.Object[])">
 <summary>
 Creates a Command given the command text (SQL) with arguments. Place a '?'
 in the command text for each of the arguments and then executes that command.
 It returns each row of the result using the mapping automatically generated for
 the given type.
 </summary>
 <param name="_query">
 The fully escaped SQL.
 </param>
 <param name="args">
 Arguments to substitute for the occurences of '?' in the query.
 </param>
 <returns>
 An enumerable with one result for each row returned by the query.
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Query(Arkitech.Platform.Core.TableMapping,System.String,System.Object[])">
 <summary>
 Creates a Command given the command text (SQL) with arguments. Places a '?'
 in the command text for each of the arguments and then executes that command.
 It returns each row of the result using the specified mapping. This function is
 only used by libraries in order to query the database via introspection. It is
 normally not used.
 </summary>
 <param name="map">
 A <see cref="T:Arkitech.Platform.Core.TableMapping"/> to use to convert the resulting rows into objects.
 </param>
 <param name="_query">
 The fully escaped SQL.
 </param>
 <param name="args">
 Arguments to substitute for the occurences of '?' in the query.
 </param>
 <returns>
 An enumerable with one result for each row returned by the query.
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Table``1">
 <summary>
 Returns a queryable interface to the table represented by the given type.
 </summary>
 <returns>
 A queryable object that is able to translate Where, OrderBy, and Take
 queries into native SQL.
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Get``1(System.Object)">
 <summary>
 Attempts to retrieve an object with the given primary key from the table
 associated with the specified type. Use of this method requires that
 the given type have a designated PrimaryKey (using the PrimaryKeyAttribute).
 </summary>
 <param name="pk">
 The primary key.
 </param>
 <returns>
 The object with the given primary key. Throws a not found exception
 if the object is not found.
 </returns>
</member>
<member name="F:Arkitech.Platform.FrameworkConnection.privateIsInTransaction">
 <summary>
 Whether <see cref="M:Arkitech.Platform.FrameworkConnection.BeginTransaction"/> has been called and the database is waiting for a <see cref="M:Arkitech.Platform.FrameworkConnection.Commit"/>.
 </summary>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.BeginTransaction">
 <summary>
 Begins a new transaction. Call <see cref="M:Arkitech.Platform.FrameworkConnection.Commit"/> to end the transaction.
 </summary>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Rollback">
 <summary>
 Rolls back the transaction that was begun by <see cref="M:Arkitech.Platform.FrameworkConnection.BeginTransaction"/>.
 </summary>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Commit">
 <summary>
 Commits the transaction that was begun by <see cref="M:Arkitech.Platform.FrameworkConnection.BeginTransaction"/>.
 </summary>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.InsertAll(System.Collections.IEnumerable)">
 <summary>
 Inserts all specified objects.
 </summary>
 <param name="objects">
 An <see cref="T:System.Collections.IEnumerable"/> of the objects to insert.
 </param>
 <returns>
 The number of rows added to the table.
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Insert(System.Object)">
 <summary>
 Inserts the given object and retrieves its
 auto incremented primary key if it has one.
 </summary>
 <param name="obj">
 The object to insert.
 </param>
 <returns>
 The number of rows added to the table.
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Insert(System.Object,System.String,System.Type)">
 <summary>
 Inserts the given object and retrieves its
 auto incremented primary key if it has one.
 </summary>
 <param name="obj">
 The object to insert.
 </param>
 <param name="extra">
 Literal SQL code that gets placed into the command. INSERT {extra} INTO ...
 </param>
 <returns>
 The number of rows added to the table.
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.GetDataTableFromObjects(System.String,System.Object)">
 <summary>
 This method converts an object to a DataTable
 </summary>
 <param name="objects"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Update(System.Object)">
 <summary>
 Updates all of the columns of a table using the specified object
 except for its primary key.
 The object is required to have a primary key.
 </summary>
 <param name="obj">
 The object to update. It must have a primary key designated using the PrimaryKeyAttribute.
 </param>
 <returns>
 The number of rows updated.
 </returns>
</member>
<member name="M:Arkitech.Platform.FrameworkConnection.Delete``1(``0)">
 <summary>
 Deletes the given object from the database using its primary key.
 </summary>
 <param name="obj">
 The object to delete. It must have a primary key designated using the PrimaryKeyAttribute.
 </param>
 <returns>
 The number of rows deleted.
 </returns>
</member>
<member name="T:Arkitech.Platform.ICleanup">
 <summary>
 Defines a common interface for classes that should be cleaned up,
 but without the implications that IDisposable presupposes. An instance
 implementing ICleanup can be cleaned up without being
 disposed and garbage collected.
 </summary>
</member>
<member name="M:Arkitech.Platform.ICleanup.Cleanup">
 <summary>
 Cleans up the instance, for example by saving its state,
 removing resources, etc...
 </summary>
</member>
</members>
</doc>
